install.packages("readxl")
library(readxl)
data <- read_excel("Sample - Superstore.xls", sheet = 1)
View(data)
View(data)
library(readxl)
data <- read_excel("Sample - Superstore.xls", sheet = 1)
summary(data)
colSums(is.na(data))
data <- na.omit(data)
colSums(is.na(data))
df = data['City', 'State','Region','Category','Subcategory',"Product Name", "Ship Mode"]
df = data['City', 'State','Region','Category','Subcategory',"Product Name", "Ship Mode"]
install.packages("dplyr")
library(dplyr)
library(dplyr)
df <- data %>% select(City, State, Region, Category, Subcategory, `Product Name`, `Ship Mode`)
df <- data %>% select(City, State, Region, Category,  Sub-Category, `Product Name`, `Ship Mode`)
df <- data %>% select(City, State, Region, Category,  `Sub-Category`, `Product Name`, `Ship Mode`)
print(df)
df <- data %>% select(City, State, Region, Category,  `Sub-Category`, `Product Name`, `Ship Mode`, Quantity, Discount, Profit )
print(df)
install.packages("ggplot2")
install.packages("dplyr")
library(ggplot2)
library(dplyr)
library(ggplot2)
library(dplyr)
data_summary <- df %>%
group_by(Category) %>%
summarize(Total_Profit = sum(Profit))
# Create a bar plot
ggplot(data_summary, aes(x = Category, y = Total_Profit, fill = Category)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Total Profit by Category", x = "Category", y = "Total Profit")
ggplot(data_summary, aes(x = "Sub-Category", y = Total_Profit, fill = Category)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Total Profit by Category", x = "Category", y = "Total Profit")
ggplot(data_summary, aes(x = Sub-Category, y = Total_Profit, fill = Category)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Total Profit by Category", x = "Sub-Category", y = "Total Profit")
data_summary <- df %>%
group_by(Sub-Category) %>%
summarize(Total_Profit = sum(Profit))
data_summary <- df %>%
group_by(Sub-Category) %>%
summarize(Total_Profit = sum(Profit))
data_summary <- df %>%
group_by("Sub-Category") %>%
summarize(Total_Profit = sum(Profit))
ggplot(data_summary, aes(x = "Sub-Category", y = Total_Profit, fill = Category)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Total Profit by Category", x = "Sub-Category", y = "Total Profit")
data_summary <- df %>%
group_by(`Sub-Category`, Category) %>%
summarize(Total_Profit = sum(Profit), .groups = 'drop')
# Create a bar plot
ggplot(data_summary, aes(x = `Sub-Category`, y = Total_Profit, fill = Category)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Total Profit by Sub-Category", x = "Sub-Category", y = "Total Profit")
data_summary <- df %>%
group_by(`Sub-Category`, Category) %>%
summarize(Total_Profit = sum(Profit), .groups = 'drop')
# Create a bar plot
ggplot(data_summary, aes(x = `Sub-Category`, y = Total_Profit, fill = Category)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Total Profit by Sub-Category", x = "Sub-Category", y = "Total Profit")
data_summary <- df %>%
group_by(`Sub-Category`, Category) %>%
summarize(Total_Profit = sum(Profit), .groups = 'drop')
# Create a bar plot
ggplot(data_summary, aes(x = `Sub-Category`, y = Total_Profit, fill = Category)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Total Profit by Sub-Category", x = "Sub-Category", y = "Total Profit")
data_summary <- df %>%
group_by(`Sub-Category`, Category) %>%
summarize(Total_Profit = sum(Profit), .groups = 'drop')
# Reorder Sub-Category based on Total_Profit for sorting in ascending order
data_summary <- data_summary %>%
mutate(`Sub-Category` = fct_reorder(`Sub-Category`, Total_Profit))
install.forcats
data_summary <- df %>%
group_by(`Sub-Category`, Category) %>%
summarize(Total_Profit = sum(Profit), .groups = 'drop') %>%
arrange(Total_Profit)
# Create a bar plot
ggplot(data_summary, aes(x = `Sub-Category`, y = Total_Profit, fill = Category)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Total Profit by Sub-Category", x = "Sub-Category", y = "Total Profit")
data_summary <- df %>%
group_by(`Sub-Category`, Category) %>%
summarize(Total_Profit = sum(Profit), .groups = 'drop') %>%
arrange(Total_Profit)
# Create a bar plot
ggplot(data_summary, aes(x = `Sub-Category`, y = Total_Profit, fill = Category)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Total Profit by Sub-Category", x = "Sub-Category", y = "Total Profit")
data_summary <- df %>%
group_by(`Sub-Category`, Category) %>%
summarize(Total_Profit = sum(Profit), .groups = 'drop') %>%
arrange(Total_Profit)
# Check the first few rows of data_summary to verify sorting
head(data_summary)
# Create a bar plot
ggplot(data_summary, aes(x = reorder(`Sub-Category`, Total_Profit), y = Total_Profit, fill = Category)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Total Profit by Sub-Category", x = "Sub-Category", y = "Total Profit")
data_summary <- df %>%
group_by(`Sub-Category`, Category) %>%
summarize(Total_Profit = sum(Profit), .groups = 'drop') %>%
arrange(Total_Profit)
# Create a bar plot
ggplot(data_summary, aes(x = reorder(`Sub-Category`, Total_Profit), y = Total_Profit, fill = Category)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Total Profit by Sub-Category", x = "Sub-Category", y = "Total Profit")
data_summary <- df %>%
group_by(City) %>%
summarize(Total_Profit = sum(Profit), .groups = 'drop') %>%
arrange(Total_Profit)
# Create a horizontal bar plot with sorted Cities
ggplot(data_summary, aes(x = reorder(City, Total_Profit), y = Total_Profit, fill = City)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Total Profit by City", x = "City", y = "Total Profit")
data_summary <- df %>%
group_by(City) %>%
summarize(Total_Profit = sum(Profit), .groups = 'drop') %>%
arrange(Total_Profit)
# Create a horizontal bar plot with sorted Cities
ggplot(data_summary, aes(x = reorder(City, Total_Profit), y = Total_Profit, fill = City)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Total Profit by City", x = "City", y = "Total Profit")
data_summary <- df %>%
group_by(`Sub-Category`, Category) %>%
summarize(
Total_Profit = sum(Profit),
Total_Quantity = sum(Quantity),
Average_Price = mean(Price),
Average_Discount = mean(Discount),
.groups = 'drop'
) %>%
arrange(Total_Profit)
data_summary <- df %>%
group_by(`Sub-Category`, Category) %>%
summarize(
Total_Profit = sum(Profit),
Total_Quantity = sum(Quantity),
Average_Price = mean(Price),
Average_Discount = mean(Discount),
.groups = 'drop'
) %>%
arrange(Total_Profit)
data_summary <- df %>%
group_by(`Sub-Category`, `Category`) %>%
summarize(
Total_Profit = sum(Profit),
Total_Quantity = sum(Quantity),
Average_Price = mean(Price),
Average_Discount = mean(Discount),
.groups = 'drop'
) %>%
arrange(Total_Profit)
furniture_data <- df %>%
filter(Category == "Furniture" & `Sub-Category` %in% c("Tables", "Bookcases"))
furniture_data <- df %>%
filter(Category == "Furniture" & `Sub-Category` %in% c("Tables", "Bookcases"))
gplot(furniture_data, aes(x = Quantity, y = Discount, color = `Sub-Category`, size = Profit)) +
geom_point() +
facet_wrap(~`Sub-Category`, scales = "free") +
scale_size_continuous(range = c(2, 8)) +
labs(title = "Relationship between Sales Discount, Quantity, and Profit for Furniture",
x = "Quantity", y = "Discount")
furniture_data <- df %>%
filter(Category == "Furniture" & `Sub-Category` %in% c("Tables", "Bookcases"))
ggplot(furniture_data, aes(x = Quantity, y = Discount, color = `Sub-Category`, size = Profit)) +
geom_point() +
facet_wrap(~`Sub-Category`, scales = "free") +
scale_size_continuous(range = c(2, 8)) +
labs(title = "Relationship between Sales Discount, Quantity, and Profit for Furniture",
x = "Quantity", y = "Discount")
data_summary <- df %>%
group_by(Category, Sale_Type) %>%
summarize(Total_Profit = sum(Profit))
data_summary <- df %>%
group_by(`Sub-Category`, Category) %>%
summarize(Total_Profit = sum(Profit), .groups = 'drop') %>%
arrange(Total_Profit)
# Create a bar plot
ggplot(data_summary, aes(x = reorder(`Sub-Category`, Total_Profit), y = Total_Profit, fill = Category)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Total Profit by Sub-Category", x = "Sub-Category", y = "Total Profit")
data_summary <- df %>%
group_by(Category, Sale_Type) %>%
summarize(Total_Profit = sum(Profit))
df <- data %>% select(City, State, Region, Category,  `Sub-Category`, `Product Name`, `Ship Mode`, Quantity, Discount, Profit, Sales  )
print(df)
data_summary <- df %>%
group_by(Category, Sale) %>%
summarize(Total_Profit = sum(Profit))
data_summary <- df %>%
group_by(Category, Sales) %>%
summarize(Total_Profit = sum(Profit))
# Create a bar plot
ggplot(data_summary, aes(x = Category, y = Total_Profit, fill = Sale_Type)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = "Total Profit by Category and Sale Type", x = "Category", y = "Total Profit", fill = "Sale Type")
data_summary <- df %>%
group_by(Category, Sales) %>%
summarize(Total_Profit = sum(Profit))
# Create a bar plot
ggplot(data_summary, aes(x = Category, y = Total_Profit, fill = Sales)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = "Total Profit by Category and Sale Type", x = "Category", y = "Total Profit", fill = "Sale Type")
data_summary <- df %>%
group_by(Category, Sales,  Discount) %>%
summarize(Total_Profit = sum(Profit))
# Create a bar plot
ggplot(data_summary, aes(x = Category, y = Total_Profit, fill = Sales)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = "Total Profit by Category and Sale Type", x = "Category", y = "Total Profit", fill = "Sale Type")
# Assuming df contains your data
data_summary <- df %>%
group_by(Category, Sales, Discount) %>%
summarize(Total_Profit = sum(Profit))
# Create a bar plot
ggplot(data_summary, aes(x = Category, y = Total_Profit, fill = Sales, color = Discount)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = "Total Profit by Category, Sale Type, and Discount",
x = "Category", y = "Total Profit", fill = "Sale Type", color = "Discount")
# Assuming df contains your data
data_summary <- df %>%
group_by(Category, Sales, Discount) %>%
summarize(Total_Profit = sum(Profit))
# Create a bar plot
ggplot(data_summary, aes(x = Category, y = Total_Profit, fill = Sales, color = Discount)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = "Total Profit by Category, Sale, and Discount",
x = "Category", y = "Total Profit", fill = "Sale", color = "Discount")
data_summary <- df %>%
group_by(Category, Sales, Discount) %>%
summarize(Total_Profit = sum(Profit))
# Filter the data for each Discount level
data_summary_0 <- data_summary %>% filter(Discount == 0)
data_summary_1 <- data_summary %>% filter(Discount == 1)
# Create two bar plots side by side
p1 <- ggplot(data_summary_0, aes(x = Category, y = Total_Profit, fill = Sales)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total Profit by Category and Sale (Discount = 0)",
x = "Category", y = "Total Profit", fill = "Sale") +
theme_minimal()
p2 <- ggplot(data_summary_1, aes(x = Category, y = Total_Profit, fill = Sales)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total Profit by Category and Sale (Discount = 1)",
x = "Category", y = "Total Profit", fill = "Sale") +
theme_minimal()
# Arrange the plots side by side
library(gridExtra)
# Assuming df contains your data
data_summary <- df %>%
group_by(Category, Sales, Discount) %>%
summarize(Total_Profit = sum(Profit))
# Create a bar plot
ggplot(data_summary, aes(x = Category, y = Total_Profit, fill = Sales, color = Discount)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = "Total Profit by Category, Sale, and Discount",
x = "Category", y = "Total Profit", fill = "Sale", color = "Discount")
data_summary <- df %>%
group_by(`Sub-Category`, Category) %>%
summarize(Total_Profit = sum(Profit), .groups = 'drop') %>%
arrange(Total_Profit)
# Create a bar plot
ggplot(data_summary, aes(x = reorder(`Sub-Category`, Total_Profit), y = Total_Profit, fill = Category)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Total Profit by Sub-Category", x = "Sub-Category", y = "Total Profit")
data_summary <- df %>%
group_by(`Sub-Category`, `Category`) %>%
summarize(
Total_Profit = sum(Profit),
Total_Quantity = sum(Quantity),
Average_Price = mean(Price),
Average_Discount = mean(Discount),
.groups = 'drop'
) %>%
arrange(Total_Profit)
data_summary <- df %>%
group_by(`Sub-Category`, Category) %>%
summarize(Total_Profit = sum(Profit), .groups = 'drop') %>%
arrange(Total_Profit)
# Create a bar plot
ggplot(data_summary, aes(x = reorder(`Sub-Category`, Total_Profit), y = Total_Profit, fill = Category)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Total Profit by Sub-Category", x = "Sub-Category", y = "Total Profit")
data_summary <- df %>%
filter(Category == "Furniture") %>%
group_by(`Sub-Category`, Category) %>%
summarize(Total_Profit = sum(Profit), .groups = 'drop') %>%
arrange(Total_Profit)
# Create a bar plot
ggplot(data_summary, aes(x = reorder(`Sub-Category`, Total_Profit), y = Total_Profit, fill = Category)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Total Profit by Sub-Category", x = "Sub-Category", y = "Total Profit")
furniture_summary <- df %>%
filter(Category == "Furniture") %>%
group_by(Region) %>%
summarize(
Total_Profit = sum(Profit),
Total_Sales = sum(Sales),
Total_Discount = sum(Discount),
.groups = 'drop'
)
# Create bar plots for profit, sales, and discount by region
# Profit by region
ggplot(furniture_summary, aes(x = reorder(Region, Total_Profit), y = Total_Profit)) +
geom_bar(stat = "identity", fill = "blue") +
theme_minimal() +
labs(title = "Total Profit by Region (Furniture)", x = "Region", y = "Total Profit")
# Sales by region
ggplot(furniture_summary, aes(x = reorder(Region, Total_Sales), y = Total_Sales)) +
geom_bar(stat = "identity", fill = "green") +
theme_minimal() +
labs(title = "Total Sales by Region (Furniture)", x = "Region", y = "Total Sales")
# Discount by region
ggplot(furniture_summary, aes(x = reorder(Region, Total_Discount), y = Total_Discount)) +
geom_bar(stat = "identity", fill = "red") +
theme_minimal() +
labs(title = "Total Discount by Region (Furniture)", x = "Region", y = "Total Discount")
furniture_summary <- df %>%
filter(Category == "Furniture") %>%
group_by(Region) %>%
summarize(
Total_Profit = sum(Profit),
Total_Sales = sum(Sales),
Total_Discount = sum(Discount),
.groups = 'drop'
)
# Reshape the data for plotting (from wide to long format)
furniture_summary_long <- furniture_summary %>%
pivot_longer(cols = c(Total_Profit, Total_Sales, Total_Discount),
names_to = "Variable",
values_to = "Value")
# Filter data for 'Furniture' category
furniture_summary <- df %>%
filter(Category == "Furniture") %>%
group_by(Region) %>%
summarize(
Total_Profit = sum(Profit),
Total_Sales = sum(Sales),
Total_Discount = sum(Discount),
.groups = 'drop'
)
# Reshape the data for plotting (from wide to long format)
furniture_summary_long <- furniture_summary %>%
pivot_longer(cols = c(Total_Profit, Total_Sales, Total_Discount),
names_to = "Variable",
values_to = "Value")
library(ggplot2)
library(dplyr)
# Filter data for 'Furniture' category
furniture_summary <- df %>%
filter(Category == "Furniture") %>%
group_by(Region) %>%
summarize(
Total_Profit = sum(Profit),
Total_Sales = sum(Sales),
Total_Discount = sum(Discount),
.groups = 'drop'
)
# Reshape the data for plotting (from wide to long format)
furniture_summary_long <- furniture_summary %>%
pivot_longer(cols = c(Total_Profit, Total_Sales, Total_Discount),
names_to = "Variable",
values_to = "Value")
library(ggplot2)
library(dplyr)
library(tidyr)  # Load tidyr for gather function
# Assuming `df` is your original dataframe
# Filter data for 'Furniture' category
furniture_summary <- df %>%
filter(Category == "Furniture") %>%
group_by(Region) %>%
summarize(
Total_Profit = sum(Profit),
Total_Sales = sum(Sales),
Total_Discount = sum(Discount),
.groups = 'drop'
)
# Reshape the data for plotting (from wide to long format)
furniture_summary_long <- furniture_summary %>%
gather(key = "Variable", value = "Value", -Region)
# Create the combined bar plot with facets
ggplot(furniture_summary_long, aes(x = reorder(Region, Value), y = Value, fill = Variable)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Variable, scales = "free_y", ncol = 1) +
theme_minimal() +
labs(title = "Summary of Profit, Sales, and Discount by Region (Furniture)",
x = "Region",
y = "Value",
fill = "Variable") +
coord_flip()
# Filter data for 'Furniture' category
furniture_summary <- df %>%
filter(Category == "Furniture") %>%
group_by(Region) %>%
summarize(
Total_Profit = sum(Profit),
Total_Sales = sum(Sales),
Total_Discount = sum(Discount),
.groups = 'drop'
)
# Reshape the data for plotting (from wide to long format)
furniture_summary_long <- furniture_summary %>%
pivot_longer(cols = c(Total_Profit, Total_Sales, Total_Discount),
names_to = "Variable",
values_to = "Value")
# Create the combined bar plot with facets
ggplot(furniture_summary_long, aes(x = reorder(Region, Value), y = Value, fill = Variable)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Variable, scales = "free_y", ncol = 1) +
theme_minimal() +
labs(title = "Summary of Profit, Sales, and Discount by Region (Furniture)",
x = "Region",
y = "Value",
fill = "Variable") +
coord_flip()
library(ggplot2)
# Assuming you already have furniture_summary and ggplot2 loaded
# Reshape data for easier plotting
furniture_summary_long <- tidyr::pivot_longer(furniture_summary,
cols = c(Total_Profit, Total_Sales, Total_Discount),
names_to = "Variable",
values_to = "Total_Value")
# Plot combined chart with facets
ggplot(furniture_summary_long, aes(x = Region, y = Total_Value, fill = Variable)) +
geom_col(position = "dodge") +
facet_wrap(~ Variable, scales = "free_y", ncol = 1) +
scale_fill_manual(values = c("Total_Profit" = "blue", "Total_Sales" = "green", "Total_Discount" = "red")) +
theme_minimal() +
labs(title = "Comparison of Profit, Sales, and Discount by Region (Furniture)",
x = "Region", y = "Total Value")
library(ggplot2)
# Assuming you already have furniture_summary and ggplot2 loaded
# Reshape data for easier plotting
furniture_summary_long <- tidyr::pivot_longer(furniture_summary,
cols = c(Total_Profit, Total_Sales, Total_Discount),
names_to = "Variable",
values_to = "Total_Value")
# Plot combined chart with facets
ggplot(furniture_summary_long, aes(x = Region, y = Total_Value, fill = Variable)) +
geom_col(position = "dodge") +
facet_wrap(~ Variable, scales = "free_y", ncol = 1) +
scale_fill_manual(values = c("Total_Profit" = "blue", "Total_Sales" = "green", "Total_Discount" = "red")) +
theme_minimal() +
labs(title = "Comparison of Profit, Sales, and Discount by Region (Furniture)",
x = "Region", y = "Total Value")
library(ggplot2)
# Assuming you already have furniture_summary and ggplot2 loaded
# Reshape data for easier plotting
furniture_summary_long <- tidyr::pivot_longer(furniture_summary,
cols = c(Total_Profit, Total_Sales, Total_Discount),
names_to = "Variable",
values_to = "Total_Value")
print(furniture_summary_long)
# Plot combined chart with facets
ggplot(furniture_summary_long, aes(x = Region, y = Total_Value, fill = Variable)) +
geom_col(position = "dodge") +
facet_wrap(~ Variable, scales = "free_y", ncol = 1) +
scale_fill_manual(values = c("Total_Profit" = "blue", "Total_Sales" = "green", "Total_Discount" = "red")) +
theme_minimal() +
labs(title = "Comparison of Profit, Sales, and Discount by Region (Furniture)",
x = "Region", y = "Total Value")
